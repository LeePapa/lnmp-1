name: CI

on:
  push:
    branches:
      - "20.10"
    tags:
      - "*"
  pull_request:

jobs:
  skip:
    runs-on: ubuntu-latest
    if: |
      (! (contains( github.event.head_commit.message, '[skip ci]')
      || contains( github.event.head_commit.message, '[skip action]')
      || contains( github.event.head_commit.message, '[skip actions]')
      || contains( github.event.head_commit.message, '[ci skip]')
      || contains( github.event.head_commit.message, '[actions skip]')
      || contains( github.event.head_commit.message, '[action skip]')))
    steps:
      - run: echo "build continue !"
  ci:
    strategy:
        fail-fast: false
        matrix:
          os:
          - ubuntu-latest
          - macos-latest
    needs: skip
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash --noprofile --norc -exo pipefail {0}
    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 2
    - uses: azure/docker-login@v1
      if: |
        github.event_name == 'push'
      with:
        # login-server: contoso.azurecr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: docker-practice/actions-setup-docker@master
      with:
        docker_channel: test
        docker_version: "20.10"
    - uses: azure/docker-login@v1
      if: |
        github.event_name == 'push'
        && startsWith(matrix.os, 'ubuntu' )
      with:
        # login-server: contoso.azurecr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Update docker compose
      run: |
        docker-compose --version
        ./lnmp-docker compose --official || true
    - name: Stop MySQL
      run: sudo systemctl stop mysql
      if: |
        startsWith(matrix.os, 'ubuntu' )
    - name: Up
      run: |
        ./lnmp-docker build-config > docker-compose.yml
        docker-compose config -q

        ./lnmp-docker config > docker-compose.yml
        docker-compose config -q

        docker-compose up -d $(./lnmp-docker services)
        sleep 20
        docker ps -a
        curl -fsSL 127.0.0.1
        quite=true ./lnmp-docker down

        ./lnmp-docker up
    - name: Connect
      run: |
        sleep 20
        curl -fsSL 127.0.0.1
    - name: Down
      run: ./lnmp-docker down
    - name: pwsh
      shell: pwsh
      run: ./lnmp-docker.ps1
    - name: Set ENV
      run: |
        echo "$(pwd)" >> $GITHUB_PATH
        echo "$(pwd)/bin" >> $GITHUB_PATH
        #echo "LNMP_PATH=$(pwd)" >> $GITHUB_ENV
    - name: lnmp-CLI
      run: |
        lnmp-php -v
        lnmp-composer --version

        lnmp-npm -v
        lnmp-yarn -v
    - name: build and push [ lwpm ] image
      if: |
        contains( github.event.head_commit.message, '[lwpm]' )
        && github.event_name == 'push'
        && startsWith(matrix.os, 'ubuntu' )
      run: |
        docker buildx build -t lwpm/lwpm -f windows/lwpm.Dockerfile --push windows
    - name: build and push [ docker-image-sync ] image
      if: |
        contains( github.event.head_commit.message, '[lwpm]' )
        && github.event_name == 'push'
        && startsWith(matrix.os, 'ubuntu' )
      run: |
        docker buildx build -t khs1994/docker-image-sync -f windows/docker-image-sync.Dockerfile --push windows
    - name: build and push [ lrew ] image
      if: |
        contains( github.event.head_commit.message, '[lrew]' )
        && github.event_name == 'push'
        && startsWith(matrix.os, 'ubuntu' )
      run: |
        docker buildx build -t lrew/lrew --push lrew
  powershell:
    needs: skip
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 2
    - shell: powershell
      run: |
        ./lnmp-docker.ps1
